
// specify number of control points per patch output
// this value controls the size of the input and output arrays
// layout (vertices=4) out;
layout (vertices=3) out;

// in vec4 fragPos[];
in vec3 fragNormal[];
in vec4 fragTangent[];
in vec2 texCoord[];

// out vec4 tess_fragPos[];
out vec3 tess_fragNormal[];
out vec4 tess_fragTangent[];
out vec2 tess_texCoord[];

void main()
{
    // ----------------------------------------------------------------------
    // pass attributes through
    gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;
    // tess_fragPos[gl_InvocationID] = fragPos[gl_InvocationID];
    tess_fragNormal[gl_InvocationID] = fragNormal[gl_InvocationID];
    tess_fragTangent[gl_InvocationID] = fragTangent[gl_InvocationID];
    tess_texCoord[gl_InvocationID] = texCoord[gl_InvocationID];

    // ----------------------------------------------------------------------
    // invocation zero controls tessellation levels for the entire patch
    if (gl_InvocationID == 0)
    {
        gl_TessLevelOuter[0] = TESS_LEVEL;
        gl_TessLevelOuter[1] = TESS_LEVEL;
        gl_TessLevelOuter[2] = TESS_LEVEL;
        // gl_TessLevelOuter[3] = 16;

        gl_TessLevelInner[0] = TESS_LEVEL;
        // gl_TessLevelInner[1] = 16;
    }
}